{"version":3,"sources":["webpack:///resources/js/src/app/components/common/GoogleMaps.vue","webpack:///./resources/js/src/app/components/common/GoogleMaps.vue","webpack:///./resources/js/src/app/components/common/GoogleMaps.vue?e21b","webpack:///./resources/js/src/app/components/common/GoogleMaps.vue?8746","webpack:///./resources/js/src/app/components/common/GoogleMaps.vue?dafb"],"names":["props","address","type","required","lat","lng","zoom","default","maptype","aspectRatio","data","scriptBlocked","computed","aspectClass","mounted","then","catch","methods","createScript","script","resolve","whenConsented","document","getCoordinates","geocoder","reject","initializeMap","center","mapTypeId","map","position","render","_vm","_c","_self","ref","staticClass","class","_t","_e","staticRenderFns","_withStripped"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAS2D;AACJ;AAExC;EACfA;IACAC,SACA;MACAC,YADA;MAEAC;IAFA,CAFA;IAMAC,KACA;MACAF,YADA;MAEAC;IAFA,CAPA;IAWAE,KACA;MACAH,YADA;MAEAC;IAFA,CAZA;IAgBAG,MACA;MACAJ,YADA;MAEAK;IAFA,CAjBA;IAqBAC,SACA;MACAN,YADA;MAEAK;IAFA,CAtBA;IA0BAE,aACA;MACAP,YADA;MAEAK;IAFA;EA3BA,CADA;EAkCAG,sBACA;IACA;MACAC;IADA;EAGA,CAvCA;EAyCAC,UACA;IACAC,WADA,yBAEA;MACA;IACA;EAJA,CA1CA;EAiDAC,OAjDA,qBAkDA;IAAA;;IACA,2BACA;MACA,qBACAC,IADA,CACA,YACA;QACA;MACA,CAJA,EAKAC,KALA,CAKA,YACA,CACA;MACA,CARA;IASA,CAXA;EAYA,CA/DA;EAiEAC,SACA;IACAC,YADA,0BAEA;MAAA;;MACA,8CACA;QACA;;QAEA,sFACA;UACA;UACA;;UACA,4FACA;YACA;YACAC;cAAA;YAAA;UACA,CAJA,MAMA;YACA;YACAC;UACA;QACA,CAdA,MAgBA;UACA;UACAC,4EACA,kBADA,EAEA,YACA;YACA;YACA;YAEAF;YACAA;YACAA;YAEAA;cAAA;YAAA;YACAA;cAAA;YAAA;YAEAG;UACA,CAfA,EAgBA,YACA;YACA;UACA,CAnBA;QAoBA;MACA,CA3CA;IA4CA,CA/CA;IAiDAC,cAjDA,4BAkDA;MAAA;;MACA;MACA;;MAEA,8BACA;QACA;UACAnB,aADA;UAEAC;QAFA;MAIA,CANA,MAOA,uCACA;QACA,8CACA;UACA;UACAmB,iBACA;YACAvB;UADA,CADA,EAIA,0BACA;YACA,2DACA;cACAmB;YACA,CAHA,MAKA;cACAK;YACA;UACA,CAdA;QAgBA,CAnBA;MAoBA;;MAEA;IACA,CAtFA;IAwFAC,aAxFA,2BAyFA;MAAA;;MACA,sBACAX,IADA,CACA,uBACA;QACA,gEACA;UACAY,mBADA;UAEArB,iBAFA;UAGAsB;QAHA,CADA;QAOA,uBACA;UACAC,QADA;UAEAC;QAFA,CADA;MAMA,CAhBA;IAiBA;EA3GA;AAlEA,G;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA,IAAIC,MAAM,GAAG,SAASA,MAAT,GAAkB;EAC7B,IAAIC,GAAG,GAAG,IAAV;EAAA,IACEC,EAAE,GAAGD,GAAG,CAACE,KAAJ,CAAUD,EADjB;;EAEA,OAAOA,EAAE,CACP,KADO,EAEP;IACEE,GAAG,EAAE,qBADP;IAEEC,WAAW,EAAE,kCAFf;IAGEC,KAAK,EAAEL,GAAG,CAACnB;EAHb,CAFO,EAOP,CAACmB,GAAG,CAACrB,aAAJ,GAAoBsB,EAAE,CAAC,KAAD,EAAQ,CAACD,GAAG,CAACM,EAAJ,CAAO,SAAP,CAAD,CAAR,EAA6B,CAA7B,CAAtB,GAAwDN,GAAG,CAACO,EAAJ,EAAzD,CAPO,CAAT;AASD,CAZD;;AAaA,IAAIC,eAAe,GAAG,EAAtB;AACAT,MAAM,CAACU,aAAP,GAAuB,IAAvB;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAyF;AAC3B;AACL;;;AAGzD;AACsG;AACtG,gBAAgB,2GAAU;AAC1B,EAAE,gFAAM;AACR,EAAE,qFAAM;AACR,EAAE,8FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAkM,CAAgB,8OAAG,EAAC,C;;;;;;;;;;;;ACAtN;AAAA;AAAA;AAAA;AAAA;AAAA","file":"chunks/ceres-client-24.js","sourcesContent":["<template>\n    <div :class=\"aspectClass\" class=\"maps-component position-relative\" ref=\"googleMapsContainer\">\n        <div v-if=\"scriptBlocked\">\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { whenConsented } from \"../../helper/whenConsented\";\nimport { isNullOrUndefined } from \"../../helper/utils\";\n\nexport default {\n    props: {\n        address:\n        {\n            type: String,\n            required: false\n        },\n        lat:\n        {\n            type: Number,\n            required: false\n        },\n        lng:\n        {\n            type: Number,\n            required: false\n        },\n        zoom:\n        {\n            type: Number,\n            default: 16\n        },\n        maptype:\n        {\n            type: String,\n            default: \"roadmap\"\n        },\n        aspectRatio:\n        {\n            type: String,\n            default: \"3-1\"\n        }\n    },\n\n    data: function()\n    {\n        return {\n            scriptBlocked: true\n        };\n    },\n\n    computed:\n    {\n        aspectClass()\n        {\n            return \"prop-\" + this.aspectRatio;\n        }\n    },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            this.createScript()\n                .then(() =>\n                {\n                    this.initializeMap();\n                })\n                .catch(() =>\n                {\n                    // Do nothing\n                });\n        });\n    },\n\n    methods:\n    {\n        createScript()\n        {\n            return new Promise((resolve, reject) =>\n            {\n                const script = document.querySelector(\"script#google-maps-api\");\n\n                if (!isNullOrUndefined(script))\n                {\n                    // script already injected...\n                    this.scriptBlocked = false;\n                    if (isNullOrUndefined(window.google))\n                    {\n                        // ...but not loaded yet\n                        script.addEventListener(\"load\", () => resolve(script), false);\n                    }\n                    else\n                    {\n                        // ..and fully loaded\n                        resolve(script);\n                    }\n                }\n                else\n                {\n                    // script not loaded\n                    whenConsented(\n                        \"media.googleMaps\",\n                        () =>\n                        {\n                            this.scriptBlocked = false;\n                            const script = document.createElement(\"script\");\n\n                            script.type = \"text/javascript\";\n                            script.id = \"google-maps-api\";\n                            script.src = `https://maps.googleapis.com/maps/api/js?key=${App.config.global.googleMapsApiKey}`;\n\n                            script.addEventListener(\"load\", () => resolve(script), false);\n                            script.addEventListener(\"error\", () => reject(script), false);\n\n                            document.body.appendChild(script);\n                        },\n                        () =>\n                        {\n                            this.scriptBlocked = true;\n                        });\n                }\n            });\n        },\n\n        getCoordinates()\n        {\n            const isLatValid = !isNaN(this.lat) && this.lat > -90 && this.lat < 90;\n            const isLngValid = !isNaN(this.lng) && this.lng > -180 && this.lng < 180;\n\n            if (isLatValid && isLngValid)\n            {\n                return Promise.resolve({\n                    lat: this.lat,\n                    lng: this.lng\n                });\n            }\n            else if(!!this.address && !!window.google)\n            {\n                return new Promise((resolve, reject) =>\n                {\n                    const geocoder = new google.maps.Geocoder();\n                    geocoder.geocode(\n                        {\n                            address: this.address\n                        },\n                        (result, status) =>\n                        {\n                            if(!!result && result.length > 0 && !!result[0].geometry)\n                            {\n                                resolve(result[0].geometry.location);\n                            }\n                            else\n                            {\n                                reject();\n                            }\n                        }\n                    );\n                });\n            }\n\n            return Promise.reject();\n        },\n\n        initializeMap()\n        {\n            this.getCoordinates()\n                .then((coordinates) =>\n                {\n                    const map = new google.maps.Map(this.$refs.googleMapsContainer,\n                        {\n                            center: coordinates,\n                            zoom  : this.zoom,\n                            mapTypeId: this.maptype\n                        });\n\n                    new google.maps.Marker(\n                        {\n                            map: map,\n                            position: coordinates\n                        });\n\n                });\n        }\n    }\n}\n</script>\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    {\n      ref: \"googleMapsContainer\",\n      staticClass: \"maps-component position-relative\",\n      class: _vm.aspectClass,\n    },\n    [_vm.scriptBlocked ? _c(\"div\", [_vm._t(\"default\")], 2) : _vm._e()]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./GoogleMaps.vue?vue&type=template&id=5bf88bf2&\"\nimport script from \"./GoogleMaps.vue?vue&type=script&lang=js&\"\nexport * from \"./GoogleMaps.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Development\\\\www\\\\plugins\\\\plugin-ceres\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5bf88bf2')) {\n      api.createRecord('5bf88bf2', component.options)\n    } else {\n      api.reload('5bf88bf2', component.options)\n    }\n    module.hot.accept(\"./GoogleMaps.vue?vue&type=template&id=5bf88bf2&\", function () {\n      api.rerender('5bf88bf2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/common/GoogleMaps.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=template&id=5bf88bf2&\""],"sourceRoot":""}