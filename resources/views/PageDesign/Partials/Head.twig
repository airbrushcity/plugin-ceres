{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}
{% spaceless %}

{% set iconCSS = plugin_path("Ceres") ~ "/css/ceres-icons.css" %}
{# asynchronously load icons.css #}
{% set defaultCSS = plugin_path("Ceres") ~ "/css/" ~ assetName ~ ".css?v=" ~ buildHash %}
{% set defaultSCSS = plugin_path("Ceres") ~ "/css/" ~ assetName ~ ".scss?v=" ~ buildHash %}

{% set canonicalUrl = services.url.getCanonicalURL() %}
{% set languageUrls = services.url.getLanguageURLs() %}
{% set customFont =
    {
        regular: config('Ceres.custom-font-regular'),
        bold: config('Ceres.custom-font-bold'),
        italic: config('Ceres.custom-font-italic'),
        boldItalic: config('Ceres.custom-font-bold-italic')
    }
%}
{% endspaceless %}
{% if canonicalUrl is not null %}
<link rel="canonical" href="{{ canonicalUrl  ~ services.url.getCanonicalQueryString() }}">
{% endif %}
{% if services.url.isCanonical() or request.get('env') == "testing" %}
{% for language, url in languageUrls %}
<link rel="alternate" hreflang="{{language}}" href="{{url}}"/>
{% endfor %}
{% endif %}
<style data-font="Custom-Font">
    {% if customFont.regular %}
    {{ add_asset(customFont.regular, 'font', 'preload', {'crossorigin': true}) }}
    @font-face {
        font-family: "Custom-Font";
        src: url("{{ customFont.regular }}");
        font-display: optional;
    }
    {% endif %}
    {% if customFont.bold %}
    {{ add_asset(customFont.bold, 'font', 'preload', {'crossorigin': true}) }}
    @font-face {
        font-family: "Custom-Font";
        src: url("{{ customFont.bold }}");
        font-display: optional;
        font-weight: bold;
    }
    {% endif %}
    {% if customFont.italic %}
    {{ add_asset(customFont.italic, 'font', 'preload', {'crossorigin': true}) }}
    @font-face {
        font-family: "Custom-Font";
        src: url("{{ customFont.italic }}");
        font-display: optional;
        font-style: italic;
    }
    {% endif %}
    {% if customFont.boldItalic %}
    {{ add_asset(customFont.boldItalic, 'font', 'preload', {'crossorigin': true}) }}
    @font-face {
        font-family: "Custom-Font";
        src: url("{{ customFont.boldItalic }}");
        font-display: optional;
        font-weight: bold;
        font-style: italic;
    }
    {% endif %}
{# add icons loading #}
.icons-loading .fa { visibility: hidden !important; }
</style>



{# fallback for disabled javascript #}
<noscript><link rel="stylesheet" href="{{ iconCSS }}"></noscript>
{% if LayoutContainer.show("Ceres::Template.StyleOverwrite") | trim is empty %}
<link rel="stylesheet" href="{{ defaultCSS }}"{% if isShopBuilder %} data-sass-root="{{ plugin_path('Ceres') }}" data-sass-original="{{ defaultSCSS }}"{% endif %}>
{% endif %}
{% if isShopBuilder %}
<link rel="stylesheet" href="{{ plugin_path("Ceres") }}/css/ceres-shopbuilder.css?v={{ buildHash }}">
{% endif %}
{# add preload polyfill #}
<script>
/*! loadCSS. [c]2017 Filament Group, Inc. MIT License */
(function( w ){"use strict"; if( !w.loadCSS ){w.loadCSS=function(){};}var rp=loadCSS.relpreload={}; rp.support=(function(){var ret; try{ret=w.document.createElement( "link" ).relList.supports( "preload" );}catch (e){ret=false;}return function(){return ret;};})(); rp.bindMediaToggle=function( link ){var finalMedia=link.media || "all"; function enableStylesheet(){if( link.addEventListener ){link.removeEventListener( "load", enableStylesheet );}else if( link.attachEvent ){link.detachEvent( "onload", enableStylesheet );}link.setAttribute( "onload", null ); link.media=finalMedia;}if( link.addEventListener ){link.addEventListener( "load", enableStylesheet );}else if( link.attachEvent ){link.attachEvent( "onload", enableStylesheet );}setTimeout(function(){link.rel="stylesheet"; link.media="only x";}); setTimeout( enableStylesheet, 3000 );}; rp.poly=function(){if( rp.support() ){return;}var links=w.document.getElementsByTagName( "link" ); for( var i=0; i < links.length; i++ ){var link=links[ i]; if( link.rel==="preload" && link.getAttribute( "as" )==="style" && !link.getAttribute( "data-loadcss" ) ){link.setAttribute( "data-loadcss", true ); rp.bindMediaToggle( link );}}}; if( !rp.support() ){rp.poly(); var run=w.setInterval( rp.poly, 500 ); if( w.addEventListener ){w.addEventListener( "load", function(){rp.poly(); w.clearInterval( run );});}else if( w.attachEvent ){w.attachEvent( "onload", function(){rp.poly(); w.clearInterval( run );});}}if( typeof exports !=="undefined" ){exports.loadCSS=loadCSS;}else{w.loadCSS=loadCSS;}}( typeof global !=="undefined" ? global : this ) ); (function(){var checkIconFont=function(){if(!document.fonts || document.fonts.check("1em FontAwesome")){document.documentElement.classList.remove('icons-loading');}}; if(document.fonts){document.fonts.addEventListener("loadingdone", checkIconFont); window.addEventListener("load", checkIconFont);}checkIconFont();})();
</script>

{{ LayoutContainer.show("Ceres::Template.StyleOverwrite") }}
<!-- Extend the existing style with a template -->
{{ LayoutContainer.show("Ceres::Template.Style") }}
{{ get_shop_builder_styles() }}
