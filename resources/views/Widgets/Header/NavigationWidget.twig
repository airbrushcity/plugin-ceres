{% import "Ceres::Widgets.Helper.TwigBuilder" as Twig %}
{% import "Ceres::Widgets.Helper.WidgetHelper" as WidgetHelper %}

{% set customClass = widget.settings.customClass.mobile %}
{% set spacingSettings = widget.settings.spacing %}
{% set inlineSpacings = WidgetHelper.getInlineSpacings(spacingSettings, spacingSettings.customPadding.mobile, spacingSettings.customMargin.mobile) %}
{% set spacingClasses = WidgetHelper.getSpacingClasses(spacingSettings, spacingSettings.customPadding.mobile, spacingSettings.customMargin.mobile) %}

{% set isFixed              = widget.settings.isFixed.mobile %}
{% set navigationStyle      = widget.settings.navigationStyle.mobile %}
{% set companyLogoUrl       = widget.settings.companyLogoUrl.mobile %}
{% set fallbackImagePath    = widget.settings.fallbackImagePath.mobile %}

{% set megaMenuMaxItems1    = widget.settings.megaMenuMaxItems.stage1.mobile | default(30) %}
{% set megaMenuMaxItems2    = widget.settings.megaMenuMaxItems.stage2.mobile | default(3) %}
{% set megaMenuMaxItems3    = widget.settings.megaMenuMaxItems.stage3.mobile | default(2) %}
{% set megaMenuMaxItems     = { "1": megaMenuMaxItems1, "2": megaMenuMaxItems2, "3": megaMenuMaxItems3 } %}

{% if navigationStyle == 'megaMenu' %}
    {% set megaMenuLevels       = widget.settings.megaMenuLevels.mobile | default(2) %}
{% else %}
    {% set megaMenuLevels = 2 %}
{% endif %}


{{ Twig.import("Tree", "Ceres::Category.Macros.CategoryTree") }}

<nav class="navbar top-bar p-0 border-bottom{% if customClass | length > 0 %} {{ customClass }}{% endif %}{% if navigationStyle == 'megaMenu' %} megamenu{% else %} normalmenu{%endif%}{% if not isFixed %} unfixed{% endif %}">
    <div class="container-max d-block{% if spacingClasses | length > 0 %} {{ spacingClasses }}{% endif %}"
    {% if inlineSpacings | length > 0 %} style="{{ inlineSpacings }}"{% endif %}>
        <div class="row mx-0 position-relative d-flex">
    
            <div class="w-100 d-none d-xl-block">
                <ul class="p-0 px-3 m-0 d-flex justify-content-between mainmenu">
                    {{ Twig.print(Twig.call("Tree.get_nav_bar", [Twig.var("categories"), "", megaMenuLevels, megaMenuMaxItems])) }}
                </ul>
            </div>

        </div>
    </div>
</nav>

